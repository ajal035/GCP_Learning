                                      <<<<<<<<<<Task 1: Create a custom security role.>>>>>>
                                      
gcloud iam roles create orca_storage_creator_579 --project $DEVSHELL_PROJECT_ID \
--permissions storage.objects.list,storage.buckets.get,storage.objects.get,storage.objects.update,storage.objects.create


                                         <<<<<<<Task 2: Create a service account.>>>>>>>>
                                         
gcloud iam service-accounts create orca-private-cluster-132-sa 


                                 <<<<<<<<<<Task 3: Bind a custom security role to a service account.>>>>>>>>>>
                                 
gcloud projects add-iam-policy-binding $DEVSHELL_PROJECT_ID     --member serviceAccount:orca-private-cluster-132-sa@$DEVSHELL_PROJECT_ID.iam.gserviceaccount.com --role roles/monitoring.viewer

gcloud projects add-iam-policy-binding $DEVSHELL_PROJECT_ID     --member serviceAccount:orca-private-cluster-132-sa@$DEVSHELL_PROJECT_ID.iam.gserviceaccount.com --role roles/logging.logWriter

gcloud projects add-iam-policy-binding $DEVSHELL_PROJECT_ID     --member serviceAccount:orca-private-cluster-132-sa@$DEVSHELL_PROJECT_ID.iam.gserviceaccount.com --role roles/monitoring.metricWriter

gcloud projects add-iam-policy-binding $DEVSHELL_PROJECT_ID --member serviceAccount:orca-private-cluster-132-sa@$DEVSHELL_PROJECT_ID.iam.gserviceaccount.com --role projects/$DEVSHELL_PROJECT_ID/roles/orca_storage_creator_579



                            <<<<<<<<<<Task 4: Create and configure a new Kubernetes Engine private cluster>>>>>>
                            
gcloud container clusters create orca-cluster-358 --num-nodes 1 --master-ipv4-cidr=172.16.0.64/28 --network orca-build-vpc --subnetwork orca-build-subnet --enable-master-authorized-networks  --master-authorized-networks 192.168.10.2/32 --enable-ip-alias --enable-private-nodes --enable-private-endpoint --service-account orca-private-cluster-132-sa@$DEVSHELL_PROJECT_ID.iam.gserviceaccount.com  --zone us-east1-b



                     <<<<<<<<<<<<<<<<<Task 5: Deploy an application to a private Kubernetes Engine cluster.>>>>>>>>>>>
                     
gcloud compute ssh --zone "us-east1-b" "orca-jumphost" 

gcloud container clusters get-credentials orca-cluster-358 --internal-ip --zone=us-east1-b

kubectl create deployment hello-server --image=gcr.io/google-samples/hello-app:1.0

kubectl expose deployment hello-server --name orca-hello-service --type LoadBalancer --port 80 --target-port 8080



